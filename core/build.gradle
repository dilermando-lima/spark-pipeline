plugins {
    id 'java'
    id 'org.sonarqube' version '3.4.0.2513'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

group='sparkpipeline.core'
version='1.0.0'
sourceCompatibility=1.8
targetCompatibility=1.8

sourceSets {
    main.java.srcDirs = ['src']
    main.resources.srcDirs = ['src-resource']
    test.java.srcDirs = ['tst']
    test.resources.srcDirs = ['tst-resource']
}

dependencies {
    implementation 'org.apache.spark:spark-core_2.13:3.3.0'
    implementation 'org.apache.spark:spark-sql_2.13:3.3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
}

test {
    testLogging.events = ['passed', 'skipped', 'failed']
    useJUnitPlatform()
}

/* == RUN COVERAGE ANALYSIS ==

    ./gradlew core:clean core:jacocoTestReport

     it will be placed in ./build/reports/jacoco/test/html/index.html

 */
jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
    }
}

/* == RUN QUALITY ANALYSIS ==

    docker run -d --name sonarqube_containter -p 9000:9000 -p 9092:9092 sonarqube
    ./gradlew core:sonarqube -Dsonar.projectName=spark-pipeline:core -Dsonar.host.url=http://localhost:9000 -Dsonar.login=admin -Dsonar.password={YOUR_PASSWORD_CONSOLE_SONAR}

*/
tasks['sonarqube'].dependsOn jacocoTestReport



